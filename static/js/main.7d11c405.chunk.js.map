{"version":3,"sources":["components/ContactList.module.css","components/Filter.module.css","components/ContactForm.module.css","redux/actions.js","redux/operations.js","components/ContactForm.js","redux/contacts-selectors.js","components/ContactList.js","components/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","className","styles","form","onSubmit","event","preventDefault","contact","id","post","then","data","catch","error","addContact","label","input","type","value","autoComplete","onChange","target","pattern","title","required","button","getFilter","state","contacts","filter","getIsLoadingStatus","isLoading","getVisibleContacts","allContacts","items","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","onDeleteContact","delete","deleteContact","list","map","item","onClick","Filter","App","useEffect","get","color","height","width","timeout","createReducer","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d11c405.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__xnAi0\",\"item\":\"ContactList_item__3jEfn\",\"button\":\"ContactList_button__3uRAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3d-Z2\",\"label\":\"Filter_label__1qVPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__AhWWK\",\"form\":\"ContactForm_form__9K3dt\",\"input\":\"ContactForm_input__2e2y2\",\"button\":\"ContactForm_button__3nKuj\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction(\"contscts/fetchContactRequest\");\r\nconst fetchContactSuccess = createAction(\"contscts/fetchContactSuccess\");\r\nconst fetchContactError = createAction(\"contscts/fetchContactError\");\r\n\r\nconst addContactRequest = createAction(\"contscts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contscts/addContactSuccess\");\r\nconst addContactError = createAction(\"contscts/addContactError\");\r\n\r\n\r\nconst deleteContactRequest = createAction(\"contscts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contscts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contscts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n};","import axios from \"axios\";\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = \" http://localhost:4040\";\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n    axios\r\n        .get('/contacts',)\r\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        id: \"\",\r\n        name,\r\n        number,\r\n    };\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch((error) => dispatch(deleteContactError(error)))\r\n};","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from './ContactForm.module.css'\r\nimport {addContact} from \"../redux/operations\";\r\n\r\n\r\nexport default function ContactForm (){\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n   const handleNameChange = event => {\r\n       setName(event.target.value)\r\n  };\r\n  \r\n   const handleNumberChange = event => {\r\n       setNumber(event.target.value)\r\n    };\r\n    \r\n const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(addContact( name, number ));\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n    \r\n  \r\n  return (\r\n            <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n                    Name\r\n         <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                autoComplete=\"off\"\r\n                onChange={handleNameChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n/>\r\n                </label>\r\n                 <label className={styles.label}>\r\n                    Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            autoComplete=\"off\"\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n\r\n        <button  className={styles.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n        )\r\n    }\r\n\r\n","export const getContacts=state=>state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getIsLoadingStatus = state=>state.contacts.isLoading;\r\n\r\n\r\nexport const getVisibleContacts = (state) => {\r\n    const allContacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter\r\n        (contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n}","import React from \"react\";\r\nimport styles from './ContactList.module.css';\r\nimport { deleteContact } from \"../redux/operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../redux/contacts-selectors\";\r\n\r\n\r\n\r\nexport default function ContactList  () {\r\n    const contacts = useSelector(getVisibleContacts);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n    \r\n    return (\r\n        <ul className={styles.list}>\r\n        {\r\n            contacts.map(({ id, name, number }) => (\r\n                <li\r\n                    className={styles.item}\r\n                    key={id}\r\n                >{name}: {number}\r\n                <button className={styles.button} type=\"button\" onClick={()=>onDeleteContact(id)}>Delete</button>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n    )\r\n    \r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from './Filter.module.css';\r\nimport { changeFilter } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getFilter} from \"../redux/contacts-selectors\"\r\n\r\n\r\n\r\n\r\nexport default function Filter  () {\r\n  const value = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFilterContact = (event) => dispatch(changeFilter(event.target.value));\r\n  \r\n  return (  <label className={styles.label}>\r\n          Find contacts by Name\r\n          <input className={styles.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onFilterContact}\r\n          />\r\n    </label>)\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector  } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm\"\nimport ContactList from \"./components/ContactList\"\nimport Filter from \"./components/Filter\";\nimport { fetchContacts } from \"./redux/operations\";\nimport Loader from \"react-loader-spinner\";\nimport {getIsLoadingStatus} from \"./redux/contacts-selectors\"\n\n\n\nfunction App() {\n\n  const isLoading = useSelector(getIsLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n       dispatch(fetchContacts())\n    }, [dispatch]);\n\n   return (\n    <div>\n  <h1>Phonebook</h1>\n       <ContactForm />\n       {isLoading && <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={30}\n        width={30}\n        timeout={3000} \n      />}\n  <h2>Contacts</h2>\n        <Filter/>\n        <ContactList />\n</div>\n  )\n}\n\n\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactSuccess,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactSuccess,\r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    changeFilter,\r\n    fetchContactRequest,\r\n    fetchContactError\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]:(state, {payload}) =>  payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, {payload})=>state.filter(contact=>contact.id !== payload)\r\n})\r\n    \r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: ()=>false,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoading\r\n})","import {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage' \r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from \"./reducers\";\r\n\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n    // contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n      contacts: contactsReducer\r\n  },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    })\r\n})\r\n\r\n  // let persistor = persistStore(store)\r\n\r\nexport  {store};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/store\";\n// import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<h1>Loading...</h1>} persistor={persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}